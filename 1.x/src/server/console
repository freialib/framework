#!/usr/bin/env php
<?php namespace app\main;

	// php settings
	date_default_timezone_set('Europe/London');

	$srcpath = realpath(__DIR__.'/..');
	$syspath = realpath(__DIR__);
	$logspath = realpath("$syspath/app/logs");

	// fatalerror logging
	require "$syspath/app/fatalerrors.php";
	\demo\main\fatalerrors($logspath);

	require "$srcpath/autoloader.php";
	require "$syspath/app/context.php";

	// init autoloader
	$autoloader = autoloader($srcpath);

	if ($autoloader === null) {

		$not_interactive = in_array('-n', $argv);

		if ( ! $not_interactive) {
			$stdin = fopen('php://stdin', 'r');
			echo "  The project dependencies don't appear to be installed.\n";
			do {
				echo '  Do you wish to install them now? [Y|n] ';
				$answer = trim(fgets($stdin), "\n\r\t ");
			}
			while ( ! in_array($answer, ['n', 'Y']));
		}
		else { // no-interaction (default to Y)
			$answer = 'Y';
		}

		if ($answer == 'Y') {
			echo str_repeat('-', 79)."\n";
			echo " [01] Installing composer\n\n";
			$this_cwd = getcwd();
			chdir($srcpath);
			if ( ! file_exists('vendor/.bin/composer.phar')) {
				passthru('curl -sS https://getcomposer.org/installer | php -- --install-dir=vendor/.bin');
				passthru('php vendor/.bin/composer.phar --version');
			}
			else { // composer.phar exists (update instead)
				passthru('php vendor/.bin/composer.phar self-update');
			}
			echo "\n";

			echo " [02] Installing vendor\n\n";
			passthru('php vendor/.bin/composer.phar install --working-dir=. --prefer-dist');
			echo "\n";

			echo " Installation complete.\n";
			echo str_repeat('-', 79)."\n";
			chdir($this_cwd);

			$autoloader = autoloader($syspath);
			if ($autoloader === null) {
				die("  Err: unable to load autoloader\n");
			}
		}
		else { // install? no
			echo "  Ok. Bye.\n";
			exit(1); // we failed
		}
	}

	// init main context
	$context = context($srcpath, $syspath, $logspath, $autoloader);

	// create console handler
	$console = \hlin\Console::instance($context);

	// invoke main
	$commands = $context->confs->read('freia/commands');
	return $console->main($commands);
